--- For this project, I downloaded Spotify data from Kaggle.---
---Then I created a table to insert Spotify data into.---
---Finally, I performed analytics on the data using SQL. ---

---Creating the table---

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

---Then I inserted the Spotify Data .csv into the table.---

---Next I asked myself a series of questions about the data and explored the answers using the following SQL.--- 


---What is the average popularity, danceability, and energy of each artist?---

SELECT artist_name, AVG(popularity), AVG(danceability), AVG(energy) 
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

---Who are the top 10 artist based on popularity?---

SELECT artist_name, AVG(popularity) FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) DESC
limit 10;

---What artist released the longest song?---

SELECT artist_name, duration_ms FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY duration_ms DESC
LIMIT 1;

---What is the average danceability for the 10 most popular songs?---

SELECT SUM(danceability)/10 FROM 
(SELECT danceability FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10);

---Which artist/artists have the most songs?---

SELECT artist_name, COUNT(artist_name) FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(artist_name)>3;

---Which 5 songs are the least popular?---

 SELECT track_name, popularity FROM BIT_DB.Spotifydata
 GROUP BY track_name
 ORDER BY popularity
 LIMIT 5;
 
---What is the loudest song?---

SELECT track_name, loudness FROM BIT_DB.Spotifydata
ORDER BY loudness
LIMIT 1;

---Which songs have high danceability and high energy?---

SELECT track_name, danceability, energy FROM BIT_DB.Spotifydata
WHERE danceability >  (SELECT AVG(danceability) FROM BIT_DB.Spotifydata)
AND energy > (SELECT AVG(energy) FROM BIT_DB.Spotifydata)
ORDER BY track_name;

---Does the loudest song have the highest energy?--- 

SELECT track_name, loudness, energy FROM BIT_DB.Spotifydata
WHERE loudness = (SELECT MIN(loudness) FROM BIT_DB.Spotifydata)
OR energy= (SELECT MAX(energy) FROM BIT_DB.Spotifydata)
ORDER BY track_name;


---What is the popularity score of the longest and shortest song and how do they compare to the most popular songs lengths?---

SELECT track_name, popularity, duration_ms FROM BIT_DB.Spotifydata
WHERE duration_ms = (SELECT MAX(duration_ms) FROM BIT_DB.Spotifydata)
OR duration_ms = (SELECT MIN(duration_ms) FROM BIT_DB.Spotifydata)
OR popularity = (SELECT MAX(popularity) FROM BIT_DB.Spotifydata)
ORDER BY popularity;

